# Задача 16: Требуется вычислить, сколько раз встречается некоторое число X в массиве A[1..N]. 
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
# В последующих строках записаны N целых чисел Ai. Последняя строка содержит число X
# пример
# 5
# 1 2 3 4 5
# 3
# -> 1



# n = int(input('Введите размер массива:'))
# x = int(input('Введите контрольную цифру: '))
# list_1 =[]
# summa = 0
# for i in range(n):
#     a = int(input(f'Введите элемент массива {i}: '))
#     list_1.append(a)
#     if a == x:
#         summa+=1
# print(n) 
# print(*list_1)
# print(x)
# print(f'Искомое число присутствует в массиве в количестве: {summa} ')




# Задача 18: Требуется найти в массиве A[1..N] самый близкий по величине элемент к заданному числу X.
# Пользователь в первой строке вводит натуральное число N – количество элементов в массиве. 
# В последующих строках записаны N целых чисел Ai. Последняя строка содержит число X

# пример
# 5
# 1 2 3 4 5
# 6
# -> 5


# n = int(input('Введите размер массива:'))
# x = int(input('Введите контрольную цифру: '))
# list_1 =[]
# for i in range(n):
#     a = int(input(f'Введите элемент массива {i}: '))
#     list_1.append(a)
# print(*list_1) 

# def takeClosest(list_1, x):
#     closest = list_1[0]
#     for i in range(1, len(list_1)):
#       if abs(x - list_1[i]) < closest:
#           closest = list_1[i]  
#     return closest     
# print (f'Ближайшее число в массиве к контрольному числу: {closest}')
# takeClosest(list_1, x)

# def takeClosest(list_1, x):
#     newlst = []
#     for i in list_1:
#         newlst.append(i - x)
#     lstt = [abs(ele) for ele in newlst]
#     print(f'Ближайшее число в массиве к контрольному числу: {list_1[lstt.index(min(lstt))]}')

# takeClosest(list_1, x)

# Задача 20: В настольной игре Скрабл (Scrabble) каждая буква имеет определенную ценность. В случае с английским алфавитом очки распределяются так:
# A, E, I, O, U, L, N, S, T, R – 1 очко;
# D, G – 2 очка;
# B, C, M, P – 3 очка;
# F, H, V, W, Y – 4 очка;
# K – 5 очков;
# J, X – 8 очков;
# Q, Z – 10 очков.
# А русские буквы оцениваются так:
# А, В, Е, И, Н, О, Р, С, Т – 1 очко;
# Д, К, Л, М, П, У – 2 очка;
# Б, Г, Ё, Ь, Я – 3 очка;
# Й, Ы – 4 очка;
# Ж, З, Х, Ц, Ч – 5 очков;
# Ш, Э, Ю – 8 очков;
# Ф, Щ, Ъ – 10 очков.
# Напишите программу, которая вычисляет стоимость введенного пользователем слова. 
# Будем считать, что на вход подается только одно слово, которое содержит либо только английские, либо только русские буквы.

# пример

# Ввод:
# ноутбук
# Вывод:
# 12

# Вариант 1 - 100% сам

# list_x = input('Введите слово: ')
# summa = 0
# for i in list_x:
#     if i == 'А' or i == 'В' or i == 'Е' or i == 'И' or i == 'Н' or i == 'О' or i == 'Р' or i == 'С' or i == 'Т':
#         summa += 1
#     elif i == 'Д' or i == 'К' or i == 'Л' or i == 'М' or i == 'П' or i == 'У':
#         summa += 2
#     elif i == 'Б' or i == 'Г' or i == 'Ё' or i == 'Ь' or i == 'Я':
#         summa += 3
#     elif i == 'Й' or i == 'Ы':
#         summa += 4 
#     elif i == 'Ж' or i == 'З' or i == 'Х' or i == 'Ч' or i == 'Я':
#         summa += 5 
#     elif i == 'Ш' or i == 'Э' or i == 'Ю':
#         summa += 8
#     elif i == 'Ф' or i == 'Щ' or i == 'Ъ':
#         summa += 10
# print(summa)



# Вариант 2 - из источников (пытался разобраться - не до конца понял)


# import re
# def isCyrillic(text):
#     return bool(re.search('[а-яА-Я]', text)) 
# points_en = {1:'AEIOULNSTR', 2:'DG', 3:'BCMP', 4:'FHVWY', 5:'K', 8:'JZ', 10:'QZ'} 
# points_ru = {1:'АВЕИНОРСТ', 2:'ДКЛМПУ', 3:'БГЁЬЯ', 4:'ЙЫ', 5:'ЖЗХЦЧ', 8:'ШЭЮ', 10:'ФЩЪ'} 
# text = input('Введите слово: ').upper() 
# if isCyrillic(text): 
#     print(sum([k for i in text for k, v in points_ru.items() if i in v])) 
# else: print(sum([k for i in text for k, v in points_en.items() if i in v]))